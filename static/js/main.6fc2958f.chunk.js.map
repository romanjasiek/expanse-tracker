{"version":3,"sources":["components/Expenses/ExpenseFilter.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Footer.js","App.js","index.js"],"names":["ExpensesFilter","props","className","value","selected","onChange","event","onChangeFilter","target","Card","classes","children","ExpenseDate","expenseMonth","date","toLocaleString","month","expenseYear","getFullYear","expenseDay","day","ExpenseItem","useState","title","id","amount","ExpensesList","expenseItems","length","map","expense","nanoid","ChartBar","chartBarFillHeight","Math","round","maxValue","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","expensesItem","filter","toString","ExpenseFilter","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","onAddExpense","Footer","href","icon","faPhoneSquareAlt","faEnvelopeSquare","faLinkedin","faGithub","faHeart","faCoffee","DUMMY_EXPENSES","App","setExpenses","faSearchDollar","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fc2958f.chunk.js","sourcesContent":["const ExpensesFilter = (props) => {\n\n  const filterChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  }\n\n    return (\n      <div className='expenses-filter'>\n        <div className='expenses-filter__control'>\n          <label>Filter by Year</label>\n          <select value={props.selected} onChange={filterChangeHandler}>\n            <option value='2022'>2023</option>\n            <option value='2022'>2022</option>\n            <option value='2021'>2021</option>\n            <option value='2020'>2020</option>\n            <option value='2019'>2019</option>\n          </select>\n        </div>\n      </div>\n    );\n  };\n  \n  export default ExpensesFilter;","const Card = (props) => {\n\n    const classes = \"card \" + props.className;\n\n    return (\n        <div className={classes}>{props.children}</div>\n    )\n}\n\nexport default Card;","const ExpenseDate = (props) => {\n    const expenseMonth = props.date.toLocaleString(\"en-US\", {month: \"long\"})\n    const expenseYear = props.date.getFullYear();\n    const expenseDay = props.date.toLocaleString(\"en-US\", {day: \"2-digit\"})\n\n    return (\n        <div className=\"expense-date\">\n            <div className=\"expense-date__month\">{expenseMonth}</div>\n            <div className=\"expense-date__year\">{expenseYear}</div>\n            <div className=\"expense-date__day\">{expenseDay}</div>\n        </div>\n    )\n}\n\nexport default ExpenseDate;","import { useState}  from \"react\";\n\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nconst ExpenseItem = (props) => {\n\n    const [title, setTitle] = useState(props.title);\n\n    // const clickHandler = () => {\n    //   setTitle(\"Updated!\");\n    //   console.log(\"Button clicked\");\n    // };\n\n    return (\n      <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{title} <br /><span className=\"expense-item__id\">ID: {props.id}</span></h2>\n          {/* <span className=\"expense-item__id\">ID: {props.id}</span> */}\n        </div>\n        <div className=\"expense-item__price\">{props.amount} â‚¬</div>\n        {/* <button onClick={clickHandler}>Change Title</button> */}\n      </Card>\n      </li>\n    );\n}\n\nexport default ExpenseItem;","import ExpenseItem from \"./ExpenseItem\";\nimport { nanoid } from \"nanoid\";\n\nconst ExpensesList = (props) => {\n\n    if (props.expenseItems.length === 0) {\n        return <h2 className=\"expenses-list__fallback\">No Expenses found.</h2>;\n    }\n\n    return <ul className=\"expenses-list\">\n        {props.expenseItems.map((expense) => <ExpenseItem \n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n        id={expense.id}\n        key={nanoid()}/>)}\n    </ul>\n}\n\nexport default ExpensesList;","const ChartBar = (props) => {\n\n    let chartBarFillHeight = \"0%\";\n\n    if(props.value > 0) {\n        chartBarFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n    }\n\n    return <div className=\"chart-bar\">\n        <div className=\"chart-bar__inner\">\n            <div className=\"chart-bar__fill\" style={{height: chartBarFillHeight}}></div>\n        </div>\n        <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n}\n\nexport default ChartBar;","import { nanoid } from \"nanoid\";\n\nimport ChartBar from './ChartBar';\n\nconst Chart = (props) => {\n\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n    const totalMaximum = Math.max(...dataPointValues);\n\n    return <div className=\"chart\">\n        {props.dataPoints.map(dataPoint => {\n            return <ChartBar \n                        value={dataPoint.value} \n                        maxValue={totalMaximum} \n                        label={dataPoint.label} \n                        key={nanoid()} />})}\n    </div>\n}\n\nexport default Chart;","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n    const chartDataPoints = [\n        { label: \"Jan\", value: 0 },\n        { label: \"Feb\", value: 0 },\n        { label: \"Mar\", value: 0 },\n        { label: \"Apr\", value: 0 },\n        { label: \"May\", value: 0 },\n        { label: \"Jun\", value: 0 },\n        { label: \"Jul\", value: 0 },\n        { label: \"Aug\", value: 0 },\n        { label: \"Sep\", value: 0 },\n        { label: \"Oct\", value: 0 },\n        { label: \"Nov\", value: 0 },\n        { label: \"Dec\", value: 0 }\n    ];\n\n    for(const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n\n    return <Chart dataPoints={chartDataPoints}/>\n}\n\nexport default ExpensesChart;","import { useState } from \"react\";\n\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport Card from \"../UI/Card\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = (props) => {\n\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n\n  \n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.expensesItem.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n    return (\n      <Card className=\"expenses\">\n        <ExpenseFilter selected={filteredYear} onChangeFilter={filterChangeHandler}/>\n        <ExpensesChart expenses={filteredExpenses}/>\n        <ExpensesList expenseItems={filteredExpenses}/>\n      </Card>\n    );\n}\n\nexport default Expenses;","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nconst ExpenseForm = (props) => {\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\n    const [enteredAmount, setEnteredAmount] = useState(\"\");\n    const [enteredDate, setEnteredDate] = useState(\"\");\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value);\n    }\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n    }\n\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value);\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        \n        const expenseData = {\n            title: enteredTitle,\n            amount: +enteredAmount,\n            date: new Date(enteredDate),\n            id: nanoid(),\n            };\n        \n        props.onSaveExpenseData(expenseData);\n\n        setEnteredTitle(\"\");\n        setEnteredAmount(\"\");\n        setEnteredDate(\"\");\n    }\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label>What did you spend money on?</label>\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>How much was it?</label>\n                    <input type=\"number\" value={enteredAmount} min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler} />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>When did you spend money on it?</label>\n                    <input type=\"date\" value={enteredDate} min=\"2019-01-01\" max=\"2023-12-31\" onChange={dateChangeHandler} />\n                </div>\n\n                <div className=\"new-expense__control new-expense__actions\">\n                    <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n                    <button type=\"submit\">Add Expense</button>\n                </div>\n\n            </div>\n        </form>\n    )\n}\n\nexport default ExpenseForm;","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n    const [isEditing, setIsEditing] = useState(false);\n\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: nanoid(),\n        };\n    props.onAddExpense(expenseData);\n    }\n\n    const startEditingHandler = () => {\n        setIsEditing(true);\n    }\n\n    const stopEditingHandler = () => {\n        setIsEditing(false);\n    }\n\n    return (\n        <div className=\"new-expense\">\n            {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n            {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\n        </div>\n    )\n};\n\nexport default NewExpense;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPhoneSquareAlt, faEnvelopeSquare, faHeart, faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport { faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons';\n\nconst Footer = () => {\n    return(\n        <div>\n    <ul className=\"footer-menu\">\n        <li className=\"footer-menu-item\"><a href=\"tel:+491724563446\"><FontAwesomeIcon icon={faPhoneSquareAlt}/> Mobile: +49 172 456 3 446</a></li>\n        <li className=\"footer-menu-item\"><a href=\"mailto:romanjasiek@me.com?subject=Contact%20Request\"><FontAwesomeIcon icon={faEnvelopeSquare}/> romanjasiek@me.com</a></li>\n        <li className=\"footer-menu-item\"><a href=\"https://www.linkedin.com/in/romanjasiek/\"><FontAwesomeIcon icon={faLinkedin}/> LinkedIn</a></li>\n        <li className=\"footer-menu-item\"><a href=\"https://github.com/romanjasiek\"><FontAwesomeIcon icon={faGithub}/> GitHub</a></li>\n        <li className=\"footer-menu-item\">Created by <span className=\"footer-icon\">Roman Jasiek</span> in 2021 with <FontAwesomeIcon className=\"footer-icon\" icon={faHeart}/> and <FontAwesomeIcon className=\"footer-icon\" icon={faCoffee}/>  in Magdeburg</li>\n    </ul>\n        </div>\n    )\n}\n\nexport default Footer;","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearchDollar } from '@fortawesome/free-solid-svg-icons'\n\nimport \"./styles/app.scss\";\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Footer from \"./components/UI/Footer\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: nanoid(),\n    title: 'Sample Entry',\n    amount: 9.99,\n    date: new Date(2021, 1, 1),\n  },\n];\n\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n    return [expense, ...prevExpenses]\n    });\n  };\n\n  return (\n    <div>\n      <h1 className=\"new-expense\"><FontAwesomeIcon icon={faSearchDollar} /> Expense Tracker</h1>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expensesItem={expenses} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}